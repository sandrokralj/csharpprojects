//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TakeOutAdmin.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/FastFoodService")]
    [System.SerializableAttribute()]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IFoodService", CallbackContract=typeof(TakeOutAdmin.ServiceReference1.IFoodServiceCallback))]
    public interface IFoodService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFoodService/GetOrderNumber", ReplyAction="http://tempuri.org/IFoodService/GetOrderNumberResponse")]
        int GetOrderNumber();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFoodService/GetOrderNumber", ReplyAction="http://tempuri.org/IFoodService/GetOrderNumberResponse")]
        System.Threading.Tasks.Task<int> GetOrderNumberAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFoodService/GetProductList", ReplyAction="http://tempuri.org/IFoodService/GetProductListResponse")]
        TakeOutAdmin.ServiceReference1.Product[] GetProductList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFoodService/GetProductList", ReplyAction="http://tempuri.org/IFoodService/GetProductListResponse")]
        System.Threading.Tasks.Task<TakeOutAdmin.ServiceReference1.Product[]> GetProductListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFoodService/CreateOrder", ReplyAction="http://tempuri.org/IFoodService/CreateOrderResponse")]
        void CreateOrder(string[] list, int orderNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFoodService/CreateOrder", ReplyAction="http://tempuri.org/IFoodService/CreateOrderResponse")]
        System.Threading.Tasks.Task CreateOrderAsync(string[] list, int orderNumber);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFoodServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFoodService/OrderStatus", ReplyAction="http://tempuri.org/IFoodService/OrderStatusResponse")]
        void OrderStatus(bool status, string message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFoodServiceChannel : TakeOutAdmin.ServiceReference1.IFoodService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FoodServiceClient : System.ServiceModel.DuplexClientBase<TakeOutAdmin.ServiceReference1.IFoodService>, TakeOutAdmin.ServiceReference1.IFoodService {
        
        public FoodServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public FoodServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public FoodServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public FoodServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public FoodServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public int GetOrderNumber() {
            return base.Channel.GetOrderNumber();
        }
        
        public System.Threading.Tasks.Task<int> GetOrderNumberAsync() {
            return base.Channel.GetOrderNumberAsync();
        }
        
        public TakeOutAdmin.ServiceReference1.Product[] GetProductList() {
            return base.Channel.GetProductList();
        }
        
        public System.Threading.Tasks.Task<TakeOutAdmin.ServiceReference1.Product[]> GetProductListAsync() {
            return base.Channel.GetProductListAsync();
        }
        
        public void CreateOrder(string[] list, int orderNumber) {
            base.Channel.CreateOrder(list, orderNumber);
        }
        
        public System.Threading.Tasks.Task CreateOrderAsync(string[] list, int orderNumber) {
            return base.Channel.CreateOrderAsync(list, orderNumber);
        }
    }
}
